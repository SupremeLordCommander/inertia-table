<?php

namespace Humweb\Table\Tests\Unit;

use Humweb\Table\Fields\FieldCollection;
use Humweb\Table\Fields\ID;
use Humweb\Table\Fields\Text;
use Humweb\Table\Fields\Textarea;
use Humweb\Table\Tests\TestCase;
use Illuminate\Testing\Assert;

class FieldsTest extends TestCase
{
    protected $fieldCollection;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->fieldCollection = new FieldCollection([
            ID::make()->sortable(),
            Text::make('Title')->sortable(),
            Textarea::make('Body')->sortable()->rows(10)->nullable(),
        ]);
    }

    /**
     * A basic test example.
     * @return void
     */
    public function test_it_can_generate_attribute()
    {
        $field = Text::make('Title');

        $this->assertNotEquals('Title', $field->attribute);
        $this->assertEquals('title', $field->attribute);

        $this->assertEquals('id', ID::make()->attribute);
        $this->assertEquals('id', ID::make()->getRuleAttribute());
    }

    /**
     * @return void
     */
    public function test_it_can_make_field_sortable_and_searchable()
    {
        $field = Text::make('Title')->sortable()->searchable();

        $this->assertTrue($field->sortable);
        $this->assertTrue($field->searchable);
    }

    /**
     * @return void
     */
    public function test_it_can_find_field_by_attribute()
    {
        $id = $this->fieldCollection->find('id');
        $title = $this->fieldCollection->find('title');

        $this->assertEquals('id', $id->attribute);
        $this->assertEquals('title', $title->attribute);
    }

    /**
     * @return void
     */
    public function test_it_can_tranform_collection_into_array()
    {
        $collection = $this->fieldCollection->toArray();
        $serialize = $this->fieldCollection->jsonSerialize();

        $this->assertEquals('id', $collection[0]['attribute']);
        $this->assertEquals('id', $serialize[0]['attribute']);
    }

    /**
     * @return void
     */
    public function test_it_can_set_textarea_rows()
    {
        $body = $this->fieldCollection->find('body');

        $this->assertEquals(10, $body->rows);
    }

    /**
     * @return void
     */
    public function test_it_can_add_meta_data_to_field()
    {
        $field = Text::make('Title')->withMeta(['placeholder' => 'foobar']);

        $this->assertEquals('foobar', $field->meta()['placeholder']);
        Assert::assertArraySubset([
            'placeholder' => 'foobar',
        ], $field->jsonSerialize());
//        $this->assertEquals('title', $field->attribute);
//
//        $this->assertEquals('id', ID::make()->attribute);
//        $this->assertEquals('id', ID::make()->getRuleAttribute());
    }
}
